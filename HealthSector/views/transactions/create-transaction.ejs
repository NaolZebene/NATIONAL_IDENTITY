<% layout('boilerplate') %>

<div class="container-fluid">
  <h3 class="text-dark mb-1">Referrals</h3>
</div>

<form class="shadow-sm validated-form" style="margin: 38px;margin-top: 29px;padding: 26px;" action="/transactions/create" method="post" novalidate>

  <input class="form-control mb-4" id="idNumber" name="personId" type="text" placeholder="Person Name" required>
  

  <input class="form-control mb-4" name="drugName" id="idin" type="text" placeholder="Drug Name" required>
 

  <input class="form-control mb-4" name="dateSold" type="date" required>

  <input class="form-control mb-4" name="amount" type="number" placeholder="Amount" required>

  <input class="form-control mb-4" name="employeeId" type="text" placeholder="Employee Id" required>

  <input class="form-control mb-4" name="cash" type="number" placeholder="Cash" required>  

  <button  class="btn btn-primary mb-4" data-bs-hover-animate="pulse" type="submit" style="margin-top: 40px;"><i class="fa fa-plus"></i>&nbsp;ADD</button>
</form>

</div>
</div>\
<a class="border rounded d-inline scroll-to-top" href="#page-top"><i class="fas fa-angle-up"></i>
</a>
</div>













<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const searchInput = document.getElementById('idNumber');
  const searchResults = document.getElementById('searchResults');
  const idInput = document.getElementById('idin')
  // Function to handle filling the input with the clicked result's name
  const fillInput = (event) => {
    const clickedResult = event.target;
    searchInput.value = clickedResult.innerText;
    idInput.value = clickedResult.id;
    searchResults.innerHTML = "";
  };

  // Function to perform the live search
  const performLiveSearch = async () => {
    const query = searchInput.value;

    try {
      // Make a GET request to the server to get the search results
      const response = await axios.get(`/subsectors/search?query=${query}`);
      const results = response.data;
      // console.log(results)
      // Clear the previous results
      searchResults.innerHTML = '';

      // Create a new list item for each result
      results.forEach((result) => {
        const listItem = document.createElement('li');
        listItem.innerText = result.name;
        listItem.id= result._id 
        listItem.addEventListener('click', fillInput); // Add click event listener
        searchResults.appendChild(listItem);
      });
    } catch (error) {
      console.error(error);
    }
  };

  // Event listener for input changes
  searchInput.addEventListener('input', performLiveSearch);
});


</script>

